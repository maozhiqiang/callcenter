写代码：

    1，明确需求。我要做什么？

    2，分析思路。我要怎么做？1,2,3。

    3，确定步骤。每一个思路部分用到哪些语句，方法，和对象。

    4，代码实现。用具体的java语言代码把思路体现出来。



学习新技术的四点：

    1，该技术是什么？

    2，该技术有什么特点(使用注意)：

    3，该技术怎么使用。demo

    4，该技术什么时候用？test。


Java的三种技术架构:

    JAVAEE：Java Platform Enterprise Edition，开发企业环境下的应用程序，主要针对web程序开发；

    JAVASE：Java Platform Standard Edition，完成桌面应用程序的开发，是其它两者的基础；

    JAVAME：Java Platform Micro Edition，开发电子消费产品和嵌入式设备，如手机中的程序；

1，JDK：Java Development Kit，java的开发和运行环境，java的开发工具和jre。

2，JRE：Java Runtime Environment，java程序的运行环境，java运行的所需的类库+JVM(java虚拟机)。

3，配置环境变量：让java jdk\bin目录下的工具，可以在任意目录下运行，原因是，将该工具所在目录告诉了系统，当使用该工具时，由系统帮我们去找指定的目录。

环境变量的配置：

    1）：永久配置方式：JAVA_HOME=%安装路径%\Java\jdk

                      path=%JAVA_HOME%\bin

    2）：临时配置方式：set path=%path%;C:\Program Files\Java\jdk\bin

特点：系统默认先去当前路径下找要执行的程序，如果没有，再去path中设置的路径下找。

classpath的配置:

    1）：永久配置方式：classpath=.;c:\;e:\

    2）：临时配置方式：set classpath=.;c:\;e:\



注意：在定义classpath环境变量时，需要注意的情况

如果没有定义环境变量classpath，java启动jvm后，会在当前目录下查找要运行的类文件；

如果指定了classpath，那么会在指定的目录下查找要运行的类文件。

运算符号：

    1）、算术运算符。

        + - * / %   %:任何整数模2不是0就是1，所以只要改变被模数就可以实现开关运算。

        +:连接符。

        ++,--

    2）、赋值运算符。

        =  += -= *= /= %=

    3）、比较运算符。

        特点：该运算符的特点是：运算完的结果，要么是true，要么是false。

    4）、逻辑运算符。

        &  |  ^  !   &&   ||

        逻辑运算符除了 !  外都是用于连接两个boolean类型表达式。

        &: 只有两边都为true结果是true。否则就是false。

        |:只要两边都为false结果是false，否则就是true

        ^:异或：和或有点不一样。

             两边结果一样，就为false。

             两边结果不一样，就为true.

        & 和 &&区别： & ：无论左边结果是什么，右边都参与运算。

                      &&:短路与，如果左边为false，那么右边不参数与运算。

        | 和|| 区别：|：两边都运算。

                    ||：短路或，如果左边为true，那么右边不参与运算。

    5）、位运算符:用于操作二进制位的运算符。

        &  |  ^

        <<  >>   >>>(无符号右移)